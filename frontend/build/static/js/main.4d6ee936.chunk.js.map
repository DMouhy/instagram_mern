{"version":3,"sources":["baseUrl.js","components/Shared/Loading.js","components/Shared/Search.js","components/Post/CreatePost.js","components/Shared/Header.js","components/Post/Post.js","pages/MainPage.js","components/Post/PostDetail.js","pages/Profile.js","components/Profiles/XProfile.js","Routes.js","pages/LogSign.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","Loading","className","Search","useState","search_string","set_search_string","profiles","set_profiles","type","text","message","set_message","loading","set_loading","fetch_Search","a","fetch","BaseUrl","method","headers","body","JSON","stringify","then","res","json","Empty_error","error","useEffect","length","onClick","onChange","e","target","value","set_search","placeholder","map","profile","to","_id","key","Avatar","src","picture","user_profile","username","CreatePost","fetch_my_profile_posts","fetch_followingPosts","hide_CreatePost","set_hide_CreatePost","previewImage","set_previewImage","postImage","set_postImage","postCaption","set_postCaption","ImageUrl","set_ImageUrl","loading_postImage","set_loading_postImage","localStorage","getItem","removeItem","window","location","reload","files","reader","FileReader","readAsDataURL","onloadend","result","accept","name","id","alt","data","FormData","append","url","catch","err","console","log","htmlFor","Header","history","useHistory","push","Post","myprofileId","post","comments","set_comments","loading_comments","set_loading_comments","comment","set_comment","likes","set_likes","liked","set_liked","get_likes","postId","get_Comments","Refresh","setTimeout","includes","posted_by","image","token","caption","commentData","posted_by_username","onSubmit","preventDefault","add_Comment","MainPage","loading_post","posts","have_following","users","set_users","loading_users","set_loading_users","bool","is_users","set_is_users","user","PostDetail","is_mine","set_postId","fetchProfiles","myId","set_post","set_user","loading_postData","set_loading_postData","hide_del_val","set_hide_del_val","loading_del_val","set_loading_del_val","Profile","set_is_mine","set_myId","change_profile_picture","set_change_profile_picture","imageUrl","set_imageUrl","profile_image","set_profile_image","image_loading","set_image_loading","follow_loading","set_follow_loading","ImageToCloudinary","following","followers","last_name","first_name","XProfile","userId","useParams","Xprofile","set_Xprofile","Xposts","set_Xposts","loading_Xprofile","set_loading_Xprofile","id_notExist","set_id_notExist","fetch_X_profile_posts","Routes","myprofile","set_myprofile","myposts","set_myposts","loading_myprofile","set_loading_myprofile","set_posts","set_loading_post","set_have_following","noFollow","exact","path","render","LogSign","formSwitcher","set_formSwitcher","email","password","loginValues","set_loginValues","re_password","registerValues","set_registerValues","Change_loginValues","Change_registerValues","setItem","Submiting_Login","Submiting_Register","href","isLoging_Context","createContext","App","isLoging","set_isLoging","Provider","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d6ee936.chunk.js","sourcesContent":["const baseUrl = \"http://localhost:8000\";\r\n\r\nexport default baseUrl;","import React from 'react';\r\nimport './Loading.css';\r\nimport { FiInstagram } from 'react-icons/fi';\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className='insta_loading' >\r\n            <FiInstagram />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Search.css';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport BaseUrl from '../../baseUrl';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Loading from './Loading';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Search() {\r\n\r\n    const [search_string, set_search_string] = useState('');\r\n    const [profiles, set_profiles] = useState([]);\r\n    const [message, set_message] = useState({\r\n        type: '',\r\n        text: ''\r\n    })\r\n    const [loading, set_loading] = useState(false);\r\n\r\n    function set_search(e){\r\n        set_search_string(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(search_string === ''){\r\n            set_message({\r\n                type: '',\r\n                text: ''\r\n            })\r\n\r\n            profiles.length = 0\r\n            set_loading(false);\r\n        }  \r\n        else fetch_Search()\r\n\r\n    }, [search_string, profiles.length])\r\n\r\n    async function fetch_Search(){\r\n\r\n        if(search_string !== ''){\r\n\r\n            set_loading(true);\r\n\r\n            await fetch(`${BaseUrl}/api/search_profile`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({search_string})\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(!res.Empty_error && !res.error){\r\n                    set_profiles(res)\r\n                    set_message({\r\n                        type: 'success',\r\n                        message: ''\r\n                    })\r\n                }\r\n                if(res.error){\r\n                    set_message({\r\n                        type: 'error',\r\n                        text: res.error\r\n                    })\r\n                }\r\n                set_loading(false);\r\n            } )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if(message.type === 'error') {profiles.length = 0}\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search_profile\">\r\n            <div className='search_icon' onClick={fetch_Search}>\r\n                {\r\n                  loading ? <Loading /> : <FiSearch />\r\n                }\r\n            </div>\r\n\r\n            <input\r\n                onChange={(e) => { set_search(e) } } \r\n                type=\"text\" \r\n                placeholder='Search...' \r\n                value={search_string} \r\n            />\r\n\r\n            <div className={`profile_list ${search_string === '' && 'hide_profile_list'}`}>\r\n                {\r\n                profiles.map(profile => (\r\n                    <Link onClick={() => set_search_string('')} to={`/profile/${profile.profile._id}`} key={profile.profile._id} className=\"card\">\r\n                        <Avatar className='Avatar' src={profile.profile.picture} />\r\n                        <span>{profile.profile.user_profile.username}</span>\r\n                    </Link>\r\n                    ))\r\n                    }\r\n                    {\r\n                    message.type === 'error' && <div className='message'>{message.text}</div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react';\r\nimport './CreatePost.css';\r\nimport { BiImageAdd } from 'react-icons/bi';\r\nimport { MdCancel } from 'react-icons/md'\r\nimport baseUrl from '../../baseUrl';\r\nimport Loading from '../Shared/Loading';\r\n\r\nfunction CreatePost({ fetch_my_profile_posts, fetch_followingPosts }) {\r\n\r\n    const [hide_CreatePost, set_hide_CreatePost] = useState(true);\r\n    const [previewImage, set_previewImage] = useState('');\r\n    const [postImage, set_postImage] = useState('');\r\n    const [postCaption, set_postCaption] = useState('');\r\n    const [ImageUrl, set_ImageUrl] = useState('');\r\n    const [loading_postImage, set_loading_postImage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(ImageUrl){\r\n            fetch(`${baseUrl}/api/create_post`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify({\r\n                    'image': ImageUrl,\r\n                    'caption': postCaption\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error){\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload(false)\r\n                }\r\n                else{\r\n                    set_ImageUrl('')\r\n                    set_postCaption('')\r\n                    set_postImage('')\r\n                    set_previewImage('')\r\n                    set_loading_postImage(false)\r\n                    set_hide_CreatePost(true)\r\n                    fetch_my_profile_posts()\r\n                    fetch_followingPosts()\r\n                }\r\n            })\r\n        }\r\n    }, [ImageUrl])\r\n\r\n    function addImageTo_Cloudinary(){\r\n\r\n        if(postImage){\r\n            set_loading_postImage(true)\r\n\r\n            const data = new FormData();\r\n            data.append('file', postImage);\r\n            data.append('upload_preset', 'instagram_mern_media');\r\n            data.append('cloud_name', 'dchnmxssq');\r\n\r\n            fetch('https://api.cloudinary.com/v1_1/dchnmxssq/image/upload', {\r\n                method: 'POST',\r\n                body: data\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => set_ImageUrl(res.url) )\r\n            .catch(err => console.log(err) )\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <button>\r\n            <BiImageAdd onClick={() => set_hide_CreatePost(false)} />\r\n        </button>\r\n\r\n        <div className={`addpost_container ${hide_CreatePost && 'hide_CreatePost'}`}>\r\n            {\r\n                !loading_postImage && (\r\n                    <button onClick={() => {\r\n                        set_previewImage('')\r\n                        set_postImage('')\r\n                        set_postCaption('')\r\n                        set_hide_CreatePost(true)\r\n                    }} ><MdCancel /></button>\r\n                )\r\n            }\r\n\r\n            <div className=\"add_post\">\r\n\r\n                <input onChange={(e) => {\r\n                    \r\n                    set_postImage(e.target.files[0])\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(e.target.files[0])\r\n                    reader.onloadend = () => {\r\n                        set_previewImage(reader.result);\r\n                    }\r\n                    \r\n                }} type=\"file\" accept='image/*' name='image' id='import_postImage' />\r\n\r\n                <div className=\"title\">Add new Post</div>\r\n\r\n                {\r\n                    previewImage !== '' ? (\r\n                        <>\r\n                        {\r\n                            loading_postImage ? (\r\n                                <>\r\n                                <Loading />\r\n                                <div className='wait'>Loading your image...</div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            <>\r\n                            <img src={previewImage} alt=\"#\"/>\r\n                            <input onChange={(e) => set_postCaption(e.target.value)} className=\"add_caption\" type='text' value={postCaption} placeholder='Caption...' />\r\n                            <button onClick={addImageTo_Cloudinary}>Create</button>\r\n                            </>\r\n                        }\r\n                        </>\r\n                    )\r\n                    :\r\n                    <label htmlFor='import_postImage' >Import image</label>\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport { BiLogOut } from 'react-icons/bi';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Search from './Search';\r\nimport CreatePost from '../Post/CreatePost';\r\n\r\nfunction Header({ fetch_my_profile_posts, fetch_followingPosts }) {\r\n\r\n    const history = useHistory();\r\n\r\n    function LogOut(){\r\n        localStorage.removeItem('token');\r\n        history.push('/')\r\n        window.location.reload(false);\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header_flex\">\r\n\r\n                <div className=\"header_insta_logo\"><Link to='/'>Instagram</Link></div>\r\n\r\n                <Search />\r\n\r\n                <div className=\"buttons\">\r\n                    <CreatePost fetch_my_profile_posts={fetch_my_profile_posts} fetch_followingPosts={fetch_followingPosts} />\r\n                    <Link to='/profile'><CgProfile /></Link>\r\n                    <button onClick={LogOut} ><BiLogOut /></button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Post.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport baseUrl from '../../baseUrl';\r\nimport Loading from '../Shared/Loading';\r\nimport { BsHeartFill } from 'react-icons/bs';\r\n\r\nfunction Post({ myprofileId, post }) {\r\n\r\n    const [comments, set_comments] = useState([])\r\n    const [loading_comments, set_loading_comments] = useState(true);\r\n    const [comment, set_comment] = useState('');\r\n\r\n    const [likes, set_likes] = useState([]);\r\n    const [liked, set_liked] = useState(false);\r\n\r\n    function Refresh(){\r\n        get_Comments()\r\n        get_likes()\r\n\r\n        setTimeout(() => Refresh(), 5000)\r\n    }\r\n    useEffect(() => Refresh(), [])\r\n\r\n    useEffect(() => {\r\n        set_loading_comments(true)\r\n        get_Comments()\r\n        get_likes()\r\n    }, [post._id])\r\n\r\n    useEffect(() => {\r\n        if(likes) set_liked(likes.includes(myprofileId))\r\n    }, [likes])\r\n\r\n    function get_likes(){\r\n\r\n        fetch(`${baseUrl}/api/get_likes`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ postId: post._id })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => set_likes(res.likes) )\r\n\r\n    }\r\n\r\n    function like_unlike(){\r\n\r\n        set_liked(!liked)\r\n        const token = localStorage.getItem('token') || ''\r\n\r\n        fetch(`${baseUrl}/api/like_unlike`, {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer${token}`\r\n             },\r\n             body: JSON.stringify({\r\n                 postId: post._id\r\n             })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                localStorage.removeItem('token')\r\n                window.location.reload(false)\r\n            }\r\n\r\n            get_likes()\r\n            \r\n        } )\r\n    }\r\n\r\n    // fetch post Comments\r\n    function get_Comments(){\r\n\r\n        fetch(`${baseUrl}/api/all_post_comments`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ postId: post._id })\r\n        })\r\n        .then(res => res.json() )\r\n        .then(res => {\r\n            set_comments(res.comments)\r\n            set_loading_comments(false)\r\n        } )\r\n    }\r\n\r\n    // Add Comment\r\n    function add_Comment(e){\r\n\r\n        e.preventDefault()\r\n\r\n        if(comment){\r\n\r\n            const token = localStorage.getItem('token') || ''\r\n        \r\n            fetch(`${baseUrl}/api/add_comment`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    'postId': post._id,\r\n                    'comment': comment\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error){\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload(false)\r\n                }\r\n                else{\r\n                    set_comment('')\r\n                    get_Comments()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='post'>\r\n            <div className=\"post_username\">\r\n                <Avatar className='avatar' src={post.posted_by.picture} />\r\n                <Link to={`/profile/${post.posted_by._id}`}>\r\n                <p>{post.username}</p>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"post_post_img\">\r\n                <img src={post.image} alt=\"#\"/>\r\n            </div>\r\n\r\n            <div className=\"post_likes\">\r\n                <BsHeartFill onClick={like_unlike} className={`hearth ${liked ? 'liked' : 'notliked'}`} />\r\n                <p><span>{likes.length}</span> likes</p>\r\n            </div>\r\n\r\n            <div className=\"post_caption\">\r\n                <Avatar className='avatar' src={post.posted_by.picture} />\r\n                <div className=\"caption_data\">\r\n                    <p>{post.username}</p>\r\n                    <p>{post.caption}</p>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                loading_comments ? <Loading />\r\n                : (\r\n                    <>\r\n                    { comments.length !== 0 && (\r\n                    <div className=\"post_comments\">\r\n                        {\r\n                            comments.map(comment => (\r\n                                <div key={comment._id} className=\"comment_card\">\r\n                                    <Avatar className='avatar' src={comment.commentData.posted_by.picture} />\r\n                                    <div className=\"caption_data\">\r\n                                        <Link to={`/profile/${comment.commentData.posted_by._id}`}>\r\n                                        <p>{comment.posted_by_username}</p>\r\n                                        </Link>\r\n                                        <p>{comment.commentData.comment}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ) )\r\n                        }\r\n                    </div>\r\n                    )\r\n                    }\r\n                    </>\r\n                )\r\n            }\r\n            \r\n            <form onSubmit={(e) => add_Comment(e)} className=\"post_add_comment\">\r\n                <input onChange={(e) => set_comment(e.target.value)} type=\"text\" value={comment} placeholder='add comment...'  />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react';\r\nimport './MainPage.css';\r\nimport baseUrl from '../baseUrl';\r\nimport Loading from '../components/Shared/Loading';\r\nimport Post from '../components/Post/Post';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MainPage({ myprofileId , loading_post, posts, have_following }) {\r\n\r\n    const [users, set_users] = useState('');\r\n    const [loading_users, set_loading_users] = useState(true)\r\n    const [is_users, set_is_users] = useState({\r\n        bool: false,\r\n        message: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        set_is_users({\r\n            bool: false,\r\n            message: ''\r\n        })\r\n        set_loading_users(true)\r\n        fetch_all_users()\r\n    }, [])\r\n\r\n    function fetch_all_users(){\r\n\r\n        fetch(`${baseUrl}/api/all_profiles`, {\r\n            method: 'GET'\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                set_is_users({\r\n                    bool: true,\r\n                    message: res.error\r\n                })\r\n                set_loading_users(false)\r\n            }\r\n\r\n            set_users(res)\r\n            set_loading_users(false)\r\n\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return loading_post ? <Loading />\r\n    : (\r\n        <>\r\n        {/* users card */}\r\n        <div className=\"users_list\">\r\n            {\r\n                loading_users ? <Loading />\r\n                : (\r\n                    <>\r\n                    {\r\n                        is_users.bool ? \r\n                        <div className='no_following'>{is_users.message}</div> \r\n                        : (\r\n                            <>\r\n                            <p className='users_count'>{users.length} users</p>\r\n                            {\r\n                            users.map(user => (\r\n                                <Link to={`/profile/${user._id}`} key={user._id}>\r\n                               <div key={user._id} className='userCard'>\r\n                                   <Avatar src={user.picture} />\r\n\r\n                                   <p>{user.user_profile.username}</p>\r\n                               </div>\r\n                               </Link>\r\n                            ))\r\n                            }\r\n                            </>\r\n                        ) \r\n                    }\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n\r\n        {/* posts */}\r\n        {\r\n            have_following.bool ? <div className='no_following'>{have_following.message}</div>\r\n            : (\r\n                <div className=\"posts\">\r\n                    {\r\n                        posts.map(post => (\r\n                            <Post myprofileId={myprofileId} key={post._id} post={post} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './PostDetail.css';\r\nimport { MdCancel } from 'react-icons/md';\r\nimport baseUrl from '../../baseUrl';\r\nimport Loading from '../Shared/Loading';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsHeartFill } from 'react-icons/bs';\r\nimport { MdDeleteForever } from 'react-icons/md';\r\n\r\nfunction PostDetail({ is_mine, postId, set_postId, fetchProfiles, myId }) {\r\n\r\n    const [post, set_post] = useState('');\r\n    const [user, set_user] = useState('');\r\n    const [loading_postData, set_loading_postData] = useState(true);\r\n    const [comment, set_comment] = useState('');\r\n    const [comments, set_comments] = useState([]);\r\n    const [likes, set_likes] = useState([]);\r\n    const [loading_comments, set_loading_comments] = useState(true);\r\n\r\n    const [liked, set_liked] = useState(false);\r\n\r\n    const [hide_del_val, set_hide_del_val] = useState(true);\r\n    const [loading_del_val, set_loading_del_val] = useState(false);\r\n\r\n    function Refresh(){\r\n        get_Comments()\r\n        get_likes()\r\n\r\n        setTimeout(() => Refresh(), 5000)\r\n    }\r\n    useEffect(() => Refresh(), [])\r\n\r\n    useEffect(() => {\r\n        set_loading_comments(true)\r\n        get_Comments()\r\n\r\n        if(postId){\r\n            fetching_postDetail()\r\n            get_likes()\r\n        }\r\n        else return\r\n    }, [postId])\r\n\r\n    useEffect(() => {\r\n        if(likes) set_liked(likes.includes(myId))\r\n    }, [likes])\r\n\r\n    function fetching_postDetail(){\r\n\r\n        set_loading_postData(true)\r\n\r\n        fetch(`${baseUrl}/api/post_detail`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                postId\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                localStorage.removeItem('token');\r\n                window.location.reload(false);\r\n            }\r\n            else{\r\n                set_post(res.post)\r\n                set_user(res.user)\r\n                set_loading_postData(false)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    // fetch post Comments\r\n    function get_Comments(){\r\n\r\n        fetch(`${baseUrl}/api/all_post_comments`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ postId })\r\n        })\r\n        .then(res => res.json() )\r\n        .then(res => {\r\n            set_comments(res.comments)\r\n            set_loading_comments(false)\r\n        } )\r\n    }\r\n\r\n    function add_Comment(e){\r\n\r\n        e.preventDefault()\r\n\r\n        if(comment){\r\n\r\n            const token = localStorage.getItem('token') || ''\r\n        \r\n            fetch(`${baseUrl}/api/add_comment`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    'postId': postId,\r\n                    'comment': comment\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error){\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload(false)\r\n                }\r\n                else{\r\n                    set_comment('')\r\n                    get_Comments()\r\n                    fetchProfiles()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function get_likes(){\r\n\r\n        fetch(`${baseUrl}/api/get_likes`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ postId })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => set_likes(res.likes) )\r\n\r\n    }\r\n\r\n    function like_unlike(){\r\n\r\n        set_liked(!liked)\r\n        const token = localStorage.getItem('token') || ''\r\n\r\n        fetch(`${baseUrl}/api/like_unlike`, {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer${token}`\r\n             },\r\n             body: JSON.stringify({\r\n                 'postId': postId\r\n             })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                localStorage.removeItem('token')\r\n                window.location.reload(false)\r\n            }\r\n\r\n            fetchProfiles()\r\n            get_likes()\r\n            \r\n        } )\r\n    }\r\n\r\n    function deletePost(){\r\n\r\n        set_loading_del_val(true)\r\n        const token = localStorage.getItem('token') || ''\r\n\r\n        fetch(`${baseUrl}/api/delete_post`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer${token}`\r\n            },\r\n            body: JSON.stringify({ postId })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                localStorage.removeItem('token')\r\n                window.location.reload(false)\r\n            }\r\n            console.log(res.message)\r\n            set_loading_del_val(false)\r\n            set_hide_del_val(true)\r\n            set_postId('')\r\n            fetchProfiles()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='postDetail_container'>\r\n            \r\n            <div className='cancel_btn' onClick={() => set_postId('')} ><MdCancel /></div>\r\n\r\n            <div className=\"postDetail\">\r\n                {   loading_postData ? <Loading />\r\n                    :\r\n                    <>\r\n                        <div className=\"post_image\">\r\n                            <img src={post.image} alt=\"#\"/>\r\n                        </div>\r\n\r\n                        <div className=\"data\">\r\n                            <div className=\"header\">\r\n                                <div className=\"username\">\r\n                                    <Avatar className='avatar' src={user.picture} /> <span>{user.username.username}</span>\r\n                                </div>\r\n                                <div className={`delete_post ${!is_mine && 'hide_trash'}`}>\r\n                                    <MdDeleteForever onClick={() => set_hide_del_val(false) } className='trash' />\r\n                                </div>\r\n\r\n                                <div className={`delete_validate_container ${hide_del_val && 'hide_del_val' }`}>\r\n                                    <div className=\"btns\">\r\n\r\n                                        { loading_del_val ? <Loading />\r\n                                           :(\r\n                                            <>\r\n                                            <p>Sure you want to delete?</p>\r\n                                            <button onClick={deletePost} >Delete</button>\r\n                                            <button onClick={() => set_hide_del_val(true) } >Cancel</button>\r\n                                            </>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"caption\">\r\n                                <Avatar src={user.picture} />\r\n                                <div className=\"msg\">\r\n                                        <p>{user.username.username}</p>\r\n                                        <p>{post.caption}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"comments\">\r\n                                {\r\n                                    loading_comments ? <Loading />\r\n                                    :\r\n                                    <>\r\n                                    {\r\n                                    comments.length !== 0 ? (\r\n                                        <>\r\n                                        {\r\n                                            comments.map(comment => (\r\n                                                <Link key={comment.commentData._id} to={`/profile/${comment.commentData.posted_by._id}`} >\r\n                                                <div className=\"comment\">\r\n                                                    <Avatar src={comment.commentData.posted_by.picture} />\r\n                                                    <div className=\"msg\">\r\n                                                        <p>{comment.posted_by_username}</p>\r\n                                                        <p>{comment.commentData.comment}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                </Link>\r\n                                            ))\r\n                                        }\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    <p className='noComment'>No comment available</p>\r\n                                    }\r\n                                    </>\r\n                                }\r\n                            </div>\r\n\r\n                            <form onSubmit={(e) => add_Comment(e)} className=\"add_comment\">\r\n                                <input onChange={(e) => set_comment(e.target.value)} type=\"text\" value={comment} placeholder='add comment...'  />\r\n                            </form>\r\n\r\n                            <div className=\"likes\">\r\n                                <BsHeartFill onClick={like_unlike} className={`hearth ${liked ? 'liked' : 'notliked'}`} />\r\n                                <p><span>{likes.length}</span> likes</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </>\r\n\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Profile.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport baseUrl from '../baseUrl';\r\nimport Loading from '../components/Shared/Loading';\r\nimport { AiFillHeart } from 'react-icons/ai';\r\nimport { FaComment } from 'react-icons/fa';\r\nimport PostDetail from '../components/Post/PostDetail';\r\n\r\nfunction Profile({ fetchProfiles, posts, profile }) {\r\n\r\n    const [is_mine, set_is_mine] = useState(true);\r\n    const [myId, set_myId] = useState('');\r\n    const [change_profile_picture, set_change_profile_picture] = useState(false);\r\n    const [imageUrl, set_imageUrl] = useState('');\r\n    const [profile_image, set_profile_image] = useState('');\r\n    const [image_loading, set_image_loading] = useState(false);\r\n    const [follow_loading,set_follow_loading] = useState(false);\r\n\r\n    const [postId, set_postId] = useState('');\r\n\r\n    useEffect(() => {\r\n        is_this_profile_ismine()\r\n    }, [is_mine])\r\n\r\n    useEffect(() => {\r\n\r\n        if(profile_image !== ''){ ImageToCloudinary() }\r\n\r\n        if(imageUrl !== ''){ send_ImageUrl() }\r\n\r\n    }, [profile_image, imageUrl])\r\n\r\n    // know if this profile is mine\r\n    function is_this_profile_ismine(){\r\n\r\n        fetch(`${baseUrl}/api/is_my_profile`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Bearer${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                \"profile_id\": profile._id\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                localStorage.removeItem('token');\r\n                window.location.reload(false);\r\n            }\r\n            else{\r\n                set_is_mine(res.message)\r\n                set_myId(res.myId)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    // follow & unfollow\r\n    function handle_follow(){\r\n\r\n        set_follow_loading(true);\r\n        \r\n        fetch(`${baseUrl}/api/follow`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Bearer${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                \"profile_id\": profile._id\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                set_follow_loading(false);\r\n                localStorage.removeItem('token');\r\n                window.location.reload(false);\r\n            }\r\n            else{\r\n                fetchProfiles()\r\n                set_follow_loading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    function handle_unfollow(){\r\n\r\n        set_follow_loading(true);\r\n\r\n        fetch(`${baseUrl}/api/unfollow`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": `Bearer${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                \"profile_id\": profile._id\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                set_follow_loading(false);\r\n                localStorage.removeItem('token');\r\n                window.location.reload(false);\r\n            }\r\n            else{\r\n                fetchProfiles()\r\n                set_follow_loading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    //Add profile pic to Cloudinary\r\n    function ImageToCloudinary(){\r\n\r\n        set_image_loading(true)\r\n\r\n        const data = new FormData();\r\n        data.append('file', profile_image);\r\n        data.append('upload_preset', 'instagram_mern_media');\r\n        data.append('cloud_name', 'dchnmxssq');\r\n            \r\n        fetch('https://api.cloudinary.com/v1_1/dchnmxssq/image/upload', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n                set_imageUrl(res.url)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    //send the Url to our backend\r\n    function send_ImageUrl(){\r\n            \r\n            fetch(`${baseUrl}/api/change_profile_image`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify({\r\n                    \"imageUrl\": imageUrl\r\n                })\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if(res.error){\r\n                        localStorage.removeItem('token')\r\n                        window.location.reload(false)\r\n                    }\r\n                    if(res.message){\r\n                        console.log(res.message)\r\n                        set_change_profile_picture(false)\r\n                        set_image_loading(false)\r\n                        window.location.reload(false)\r\n                    }\r\n        \r\n                })\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    //remove image\r\n    function remove_profile_image(){\r\n\r\n        set_image_loading(true)\r\n\r\n        fetch(`${baseUrl}/api/remove_profile_image`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Authorization\": `Bearer${localStorage.getItem('token')}`\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error){\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload(false)\r\n                }\r\n                if(res.message){\r\n                    console.log(res.message)\r\n                    set_change_profile_picture(false)\r\n                    set_image_loading(false)\r\n                    fetchProfiles()\r\n                }\r\n    \r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    //Display\r\n    return (\r\n        <div className='profile'>\r\n            <div className=\"profile_header_flex\">\r\n\r\n                <Avatar onClick={() => set_change_profile_picture(true)} className={`profile_avatar ${profile.picture === 'https://res.cloudinary.com/dchnmxssq/image/upload/v1601118594/instagram_mern_images/profileimg_sugvm2.png' && 'default_avatar'} ${!is_mine && 'change_avatar'}`} src={profile.picture} />\r\n\r\n                <div className={`change_profile_pic ${ !change_profile_picture && 'hide_pic_modify'}`}>\r\n\r\n                    <input onChange={(e) => set_profile_image(e.target.files[0])} type=\"file\" accept='image/*' name=\"image\" id=\"import_image\" />\r\n\r\n                    <div className=\"conatiner\">\r\n                        {\r\n                            image_loading ? \r\n                            <Loading />\r\n                            : (\r\n                                <>\r\n                                <p>Modify profile image</p>\r\n                                <label htmlFor=\"import_image\">Import image</label>\r\n                                { \r\n                                  profile.picture !== 'https://res.cloudinary.com/dchnmxssq/image/upload/v1601118594/instagram_mern_images/profileimg_sugvm2.png' && <p onClick={remove_profile_image} >Remove image</p>\r\n                                }\r\n                                <p onClick={() => {\r\n                                    set_change_profile_picture(false)\r\n                                }} >Cancel</p>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='profile_data'>\r\n\r\n                    <div className=\"username\">{profile.user_profile.username}</div>\r\n\r\n                    <ul className=\"ul_flex\">\r\n                        <li>{posts.length} <span>posts</span></li>\r\n                        <li>{profile.following.length} <span>following</span></li>\r\n                        <li>{profile.followers.length} <span>followers</span></li>\r\n                    </ul>\r\n\r\n                    {\r\n                        !is_mine && (\r\n                            <div className='btns'>\r\n                                {\r\n                                    profile.followers.includes(myId) ? \r\n                                    <button onClick={handle_unfollow} className=\"unfollow_btn\">{follow_loading ? <Loading /> : 'unfollow'}</button>\r\n                                    :\r\n                                    <button onClick={handle_follow} className=\"follow_btn\">{follow_loading ? <Loading /> : 'follow'}</button>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    <div className='full_name'>\r\n                        {`${profile.user_profile.last_name} ${profile.user_profile.first_name}`}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            {/* Posts */}\r\n            <div className=\"profile_posts\">\r\n                {\r\n                    posts.length !== 0 && (\r\n                        posts.map(post => {\r\n                            return (\r\n                                <div key={post._id}>\r\n                                <div className=\"img_container\">\r\n                                    <img src={post.image} alt='#' />\r\n                                    <div onClick={() => {\r\n                                        set_postId(post._id)\r\n                                    } } className=\"show_likes_comments\">\r\n                                        <AiFillHeart/>{post.likes.length} - <FaComment/>{post.comments.length}\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )\r\n                }\r\n                {   postId !== '' &&\r\n                    <PostDetail\r\n                    myId={myId}\r\n                    is_mine={is_mine}\r\n                    fetchProfiles={fetchProfiles}\r\n                    postId={postId}\r\n                    set_postId={set_postId}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Profile from '../../pages/Profile';\r\nimport Loading from '../Shared/Loading';\r\nimport baseUrl from '../../baseUrl';\r\n\r\nfunction XProfile() {\r\n\r\n    const userId = useParams()\r\n    const [Xprofile, set_Xprofile] = useState('');\r\n    const [Xposts, set_Xposts] = useState('');\r\n    const [loading_Xprofile, set_loading_Xprofile] = useState(true);\r\n    const [id_notExist, set_id_notExist] = useState({\r\n        bool: false,\r\n        message: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        set_id_notExist({ bool: false, message: '' })\r\n        set_loading_Xprofile(true)\r\n        fetch_X_profile_posts()\r\n    }, [userId.id])\r\n\r\n    //Fetch Someones profiles\r\n    async function fetch_X_profile_posts(){\r\n\r\n        await fetch(`${baseUrl}/api/x_profile_posts/${userId.id}`, {\r\n            method: 'GET'\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                set_id_notExist({ \r\n                    bool: true,\r\n                    message: res.error\r\n                 })\r\n                set_loading_Xprofile(false)\r\n            }\r\n            else{\r\n                set_Xposts(res.posts);\r\n                set_Xprofile(res.profile);\r\n                set_loading_Xprofile(false)\r\n                set_id_notExist({ \r\n                    bool: false,\r\n                    message: ''\r\n                 })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n        loading_Xprofile ? <Loading /> :  (\r\n           <> \r\n           { !id_notExist.bool ?\r\n           <Profile fetchProfiles={fetch_X_profile_posts} profile={Xprofile} posts={Xposts} />\r\n           :\r\n           <div>{id_notExist.message}</div>\r\n           }\r\n           </>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default XProfile\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Header from './components/Shared/Header';\r\nimport MainPage from './pages/MainPage';\r\nimport Profile from './pages/Profile';\r\nimport XProfile from './components/Profiles/XProfile';\r\nimport Loading from './components/Shared/Loading';\r\nimport baseUrl from './baseUrl';\r\n\r\nfunction Routes() {\r\n\r\n    const [myprofile, set_myprofile] = useState('');\r\n    const [myposts, set_myposts] = useState('');\r\n    const [loading_myprofile, set_loading_myprofile] = useState(true)\r\n\r\n    const [posts, set_posts] = useState('');\r\n    const [loading_post, set_loading_post] = useState(true);\r\n    const [have_following, set_have_following] = useState({\r\n        bool: false,\r\n        message: ''\r\n    })\r\n\r\n    function Refresh(){\r\n        fetch_followingPosts()\r\n\r\n        setTimeout(() => Refresh(), 5000)\r\n    }\r\n    useEffect(() => Refresh(), [])\r\n\r\n    useEffect(() => {\r\n        fetch_my_profile_posts()\r\n    }, [myprofile])\r\n\r\n    useEffect(() => {\r\n        set_loading_post(true);\r\n        set_have_following({\r\n            bool: false,\r\n            message: ''\r\n        })\r\n        fetch_followingPosts()\r\n    }, [])\r\n\r\n    //Fetching my Profiles & posts\r\n    async function fetch_my_profile_posts(){\r\n\r\n        await fetch(`${baseUrl}/api/my_profile_posts`, {\r\n            method: 'GET',\r\n            headers: { \"Authorization\": `Bearer${localStorage.getItem('token')}`  }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error){\r\n                localStorage.removeItem('token');\r\n                window.location.reload(false);\r\n            }\r\n            else{\r\n                set_myposts(res.posts);\r\n                set_myprofile(res.profile);\r\n                set_loading_myprofile(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    // fetch following posts\r\n    async function fetch_followingPosts(){\r\n\r\n        const  token = localStorage.getItem('token') || '';\r\n\r\n        await fetch(`${baseUrl}/api/all_following_posts`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer${token}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.noFollow){\r\n                set_have_following({\r\n                    bool: true,\r\n                    message: res.noFollow\r\n                })\r\n                set_loading_post(false)\r\n            }\r\n\r\n            set_posts(res)\r\n            set_loading_post(false)\r\n        })\r\n        .catch(err => console.log(err) )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Header fetch_my_profile_posts={fetch_my_profile_posts} fetch_followingPosts={fetch_followingPosts} />\r\n        <Switch>\r\n            <Route exact path='/' render={() => <MainPage myprofileId={myprofile._id} loading_post={loading_post} posts={posts} have_following={have_following} />} />\r\n            <Route exact path='/profile' render={() => loading_myprofile ? <Loading /> :  <Profile fetchProfiles={fetch_my_profile_posts} profile={myprofile} posts={myposts} /> } />\r\n            <Route exact path='/profile/:id' render={() => <XProfile /> } />\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useState } from 'react';\r\nimport './LogSign.css';\r\nimport baseUrl from '../baseUrl';\r\n\r\nfunction LogSign() {\r\n\r\n    const [formSwitcher, set_formSwitcher] = useState(false);\r\n    const [loading, set_loading] = useState(false);\r\n    const [message, set_message] = useState({\r\n        type: '',\r\n        text: ''\r\n    });\r\n    const [loginValues, set_loginValues] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [registerValues, set_registerValues] = useState({\r\n        username: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    //change login & register Values\r\n    function Change_loginValues(e){\r\n        set_loginValues({...loginValues, [e.target.name]: e.target.value})\r\n    }\r\n    function Change_registerValues(e){\r\n        set_registerValues({...registerValues, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    // Submiting Forms\r\n    function Submiting_Login(e){\r\n        e.preventDefault()\r\n        set_loading(true)\r\n\r\n        fetch(`${baseUrl}/api/login`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(loginValues)\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                console.log(res.error)\r\n                set_message({type: 'error', text: res.error})\r\n                setTimeout(() =>  set_message({type: '', text: ''}), 4000)\r\n                set_loading(false)\r\n            }\r\n            else {\r\n                console.log(res)\r\n                set_message({type: 'success', text: res.message})\r\n                setTimeout(() =>  set_message({type: '', text: ''}), 4000)\r\n                set_loginValues({\r\n                    email: '',\r\n                    password: ''\r\n                })\r\n                localStorage.setItem('token', res.token)\r\n                window.location.reload(false)\r\n                set_loading(false)\r\n            }\r\n        } )\r\n\r\n    } \r\n\r\n    function Submiting_Register(e){\r\n        e.preventDefault()\r\n        set_loading(true)\r\n\r\n        fetch(`${baseUrl}/api/register`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(registerValues)\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                console.log(res.error)\r\n                set_message({type: 'error', text: res.error})\r\n                setTimeout(() =>  set_message({type: '', text: ''}), 4000)\r\n                set_loading(false)\r\n            }\r\n            else {\r\n                set_message({type: 'success', text: res.message})\r\n                setTimeout(() =>  set_message({type: '', text: ''}), 4000)\r\n                set_loginValues({\r\n                    email: registerValues.email,\r\n                    password: registerValues.password\r\n                })\r\n                set_formSwitcher(false)\r\n                set_registerValues({\r\n                    username: '',\r\n                    first_name: '',\r\n                    last_name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    re_password: ''\r\n                })\r\n                set_loading(false)\r\n            }\r\n        } )\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"logSign\">\r\n\r\n            <div className=\"FormContainer\">\r\n                <div className=\"insta_logo\">Instagram</div>\r\n                \r\n                <div className={`${message.type === 'error' ? 'message_error' : '' }${message.type === 'success' ? 'message_success' : '' }`} >{message.text}</div>\r\n\r\n                <form onSubmit={(e) => Submiting_Login(e)} className={`login_form ${formSwitcher && 'hide'}`} >\r\n                    <input onChange={(e) => Change_loginValues(e)} name='email' type=\"email\" placeholder='Your email...' value={loginValues.email} />\r\n                    <input onChange={(e) => Change_loginValues(e)} name='password' type=\"password\" placeholder='Your password...' value={loginValues.password} />\r\n                    <button className={`${loading && 'button_loading'}`} type='submit' >{ loading ? 'Login...' : 'Login'}</button>\r\n                </form>\r\n\r\n                <form onSubmit={(e) => Submiting_Register(e)} className={`signup_form ${!formSwitcher && 'hide'}`} >\r\n                    <input onChange={(e) => Change_registerValues(e)} name='username' type=\"text\" placeholder='Your username...' value={registerValues.username} />\r\n                    <input onChange={(e) => Change_registerValues(e)} name='first_name' type=\"text\" placeholder='Your first name...' value={registerValues.first_name} />\r\n                    <input onChange={(e) => Change_registerValues(e)} name='last_name' type=\"text\" placeholder='Your last name...' value={registerValues.last_name} />\r\n                    <input onChange={(e) => Change_registerValues(e)} name='email' type=\"email\" placeholder='Your email...' value={registerValues.email} />\r\n                    <input onChange={(e) => Change_registerValues(e)} name='password' type=\"password\" placeholder='Your password...' value={registerValues.password} />\r\n                    <input onChange={(e) => Change_registerValues(e)} name='re_password' type=\"password\" placeholder='Rewrite password...' value={registerValues.re_password} />\r\n                    <button className={`${loading && 'button_loading'}`} type='submit' >{ loading ? 'Reistering...' : 'Reister'}</button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <div className=\"form_switcher\">\r\n                <p>{formSwitcher ? 'Already a user ?' : 'New user ?'} <span onClick={() => set_formSwitcher(!formSwitcher)} >{formSwitcher ? 'Login' : 'Register'}</span> </p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <footer>\r\n            <ul>\r\n                <li><a href=\"/\">A PROPOS</a></li>\r\n                <li><a href=\"/\">AIDE</a></li>\r\n                <li><a href=\"/\">API</a></li>\r\n                <li><a href=\"/\">LANGUAGE</a></li>\r\n                <li><p>&copy; 2020 INSTAGRAM_Clone</p></li>\r\n            </ul>\r\n        </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogSign\r\n","import React, { useState, createContext } from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport LogSign from './pages/LogSign';\n\nexport const isLoging_Context = createContext();\n\nfunction App() {\n\n  const [isLoging, set_isLoging] = useState(!!localStorage.getItem('token'));\n\n  return(\n    <div className=\"app\">\n    <isLoging_Context.Provider value={set_isLoging} >\n    {\n      isLoging ? <Routes /> : <LogSign />\n    }\n    </isLoging_Context.Provider>\n    </div>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}